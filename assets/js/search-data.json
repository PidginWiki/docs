{"0": {
    "doc": "Architecture",
    "title": "Architecture",
    "content": "# Pidgin Wiki Architecture With the goal (building a model) in mind, the architecture of Pidgin.Wiki is designed to provide services that facilitate or are directly applicable to the building of the model we envisage. To build a Model we need a corpus, as we can't just build a model from space funny enough there is little or no corpus available for Pidgin English. So to facilitate the goal of building a model we need to; - Build multilingual corpus [English and Pidgin] ## Building Multilingual Corpus [English and Pidgin] To build a multilingaul corpora around Pidgin we need a large dictionary/database of texts in pidgin and at least one other language (preferably English). This imply some form of data searching and data collection is required. ### A) Data Searching (Web Scrapping/Data Minining) There's definitly some amount of Pidgin English text on the internet. But, what sources have the most Pidgin English and most importantly *what is pidgin English?* in other words if searching for text in Pidgin English on the internet how can one tell that the text found is in Pidgin English or not? This leads to a cyclic problem, so we would need the model to search for text that we need to build the model! ðŸ˜€ That's definitely not the way to go. Moroever there's not a lot of text in Pidgin on the net. ### B) Data Collection Since we can't data-mine, we are left with one of the few obvious options which is collecting/building the data we need ourselves. In clear terms, we would rely on people who speak and write Pidgin English to provide us with the data we need to build the Pidgin.Wiki model. So how are we going about that? We need a piece of software to automate the collection of such data and assist with its cleaning. One of the best ways to do this is to make such a software a bot, [Bandolo](/bandolo) is designated for this. _Apart from Bandolo's chat interface, data could also be provided directly on the curating dashboard that manages data coming in from Bandolo and perhaps other sources._ ## The Model With the corpos obtained from the data collection face using `Bandolo` we then apply [Natual Language Proccessing](https://en.wikipedia.org/wiki/Natural_language_processing) with a combination of statistical and nueral methodologies geared towards arrival of results. ## Pidgin.Wiki The result of all parts of the architecture (Bandolo, Model and other tools) combined is presented on Pidgin.Wiki and a translator and dictionary for Pidgin English. ",
    "url": "http://docs.pidgin.wiki/architecture/",
    "relUrl": "/architecture/"
  },"1": {
    "doc": "Bandolo",
    "title": "Bandolo",
    "content": "# Bandolo Bandolo is an interactive data collection tool. Primarily used to collect data from humans by \"chatting\" with them. The bot collects data by asking questions determined by a `schema` which is used to cohorently shape data from different sources and permit Bandolo to be used for any kind of data collection. ### Example Question Schema ```js Question { source: [__words__, __setences__, __paragraghs__], source_fields: ['meaning', 'example', 'alternative'], } ``` The above schema describes the kinds of questions that would be generated from data passed as a collection from any data source via the `source` key and the data/information that we seek to collect via the `source_fields` key which accepts an array. For the example schema shown above we could have a pratical scenario such as; ```python question_generator = { source: ['wahala', 'paddiman', 'hafa', 'where you deh?'], source_fields: ['meaning', 'use', 'example', 'alternative'] } ``` The question generator above would generate question such as : 1. What is the *meaning* of paddiman? 2. Can you make a statement *using* `hafa`? 3. What is *alternative* way of saying `where you deh?` 4. What is a synonym for `wahala`? - In the first case the meaning source field is using to generate the question for a noun `paddiman` could equally have been for `wahala`. - In the second case a question is generated using the `use` source field which could be used to generateda question asking for an example or they \"use\"/application of something. For example `what is the use of ...`. This bring to mind the notion of keywords which we could introduce into the source fields. - In the third and fourth case questions are generated using alternative which could mean alternative phrasing for a setence (case 3) or synonym for a word (case 4). Difficulties rising from manually using the schema above to generate questions hint that it would be neccesary to _language-annotate_ data passed in to the `source`. Such language annotation could designate each member of the source collection as a _noun_,_verb_, _sentence_, _question_ or any other member type that may be designated. Another hint is that, it may be neccesary to to use _keywords_ in the source fields, for example `use` and `using` don't really sound like exact data people want to capture they sound more like keywords that can generate questions for `uses` and `examples` like above. ",
    "url": "http://docs.pidgin.wiki/bandolo/",
    "relUrl": "/bandolo/"
  },"2": {
    "doc": "Contribution Guide",
    "title": "Contribution Guide",
    "content": " ",
    "url": "http://docs.pidgin.wiki/contribute/",
    "relUrl": "/contribute/"
  },"3": {
    "doc": "Introduction",
    "title": "Introduction",
    "content": "# Pidgin Wiki Pidgin.wiki is a free online reference for West African Pidgin English spoken in different parts of Africa including Cameroon, Nigeria, Ghana and Seria Leone. The aim of the Pidgin.wiki project is to; - Build a corpus for Pidgin English. - Provide Pidgin word definations and meanings. - Understand patterns in Pidgin hence proposing a standard structure. - Provide a machine model/API to translate from and to Pidgin English. - Promote the use of Pidgin English, as blocker to barriers in Education. ## Background 4 West African countries speak Pidgin English. In Nigeria alone more than 75 million people communicate in Pidgin [[ref]](https://www.bbc.com/news/world-africa-38000387). Also, Southern Cameroon comprising the English-speaking regions of Cameroon accounts for more than 5 million fluent speakers with at least 2 million being native speakers [[ref]](https://en.wikipedia.org/wiki/Cameroonian_Pidgin_English), in addition about 50% of Cameroonians can speak some Pidgin taking the toll up to over 10 million speakers in Cameroon. Ghana is known to also have at least 5 million native speakers [[ref]](https://en.wikipedia.org/wiki/Ghanaian_Pidgin_English). When Equatorial Guinea, Seria Leone and countries influenced by these combined culture are taken into consideration we easily have more than 100 million africans who can speak and understand Pidgin English in some form. | Country | Speakers | ----------------- | ----------- | Cameroon | 10 million | Ghana | 5 million | Nigeria | 75 million | _Table : Top Speakers_ With so many people speaking Pidgin English why don't computers understand it? - Why do the very best translation algorithms that exist fail to translate Pidgin English? - Why is Education not delivered in Pidgin English? - Why is it even outlawed in certain institutions within speaking nations? We could not find logical answers to these questions, at least ones that justify the status quo. We absolutely think Pidgin English should be way more applicable and we have set out to make that happen. ### Prior development efforts Before this project, there have been some other work done to achieve some of the goals outlined here with varying amount of success, mostly less than 1% for most work reviewed. See; - http://naijalingo.com/ (Nigerian Pidgin English Dictionary) - https://www.bbc.com/pidgin (BBC News served in Pidgin English) As an open source organization we are building different tools that can help us achieve our ambitious dreams for Pidgin English. These tools include but are not limited to; - Pigdin.Wiki (Free cyclopedia displaying the combined results of reference material available in Pidgin English) - Bandolo (A data collection and management bot) - Langwa ([NMT](https://en.wikipedia.org/wiki/Neural_machine_translation) Core) See [Architecture](architecture) ",
    "url": "http://docs.pidgin.wiki/",
    "relUrl": "/"
  },"4": {
    "doc": "pidgin.wiki",
    "title": "pidgin.wiki",
    "content": " ",
    "url": "http://docs.pidgin.wiki/pidgin.wiki/",
    "relUrl": "/pidgin.wiki/"
  },"5": {
    "doc": "Requirements Specification",
    "title": "Requirements Specification",
    "content": " ",
    "url": "http://docs.pidgin.wiki/srs/",
    "relUrl": "/srs/"
  }
}
